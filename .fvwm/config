PipeRead "echo Echo Config load started at $(date)"

# This makes ibus trigger appropriately without having to edit shell
# environment settings with separate .rc files.
SetEnv GTK_IM_MODULE ibus
SetEnv XMODIFIERS @im=ibus
SetEnv QT_IM_MODULE ibus

# Configurable preference variables -- I set a bunch of variables at the top of
# my config.  These are all default values for the preference.  To change these
# values, I create additional configuration files under $[fvwm_preferences_dir]
# where I over-ride the values set here.

# Color Preferences
SetEnv FG_COLOR white
SetEnv FG_COLOR_INACTIVE grey
SetEnv BG_COLOR #4a516a
SetEnv BG_COLOR_LIGHTER #7d849d
# The BG_COLOR_LIGHTER is just the BG_COLOR lightened a bit so it can be used
# as a highlight color in menus, pagers, etc.

# Icons on the desk will be this size:
SetEnv ICON_SIZE 64x64

# Icons in title bars will be this size:
SetEnv MINI_ICON_SIZE 24x24

# Size used in screenshot menu
SetEnv SCREEN_SHOT_SCALE 256

# Size used in wallpaper menu
SetEnv WALLPAPER_SCALE 512

SetEnv MENU_FONT_FAMILY "DejaVu Sans Mono"
SetEnv MENU_FONT_SIZE 20

SetEnv DEFAULT_FONT_FAMILY "Droid Sans Mono"
SetEnv DEFAULT_FONT_SIZE 12

# Sizes for DesktopSize
SetEnv PAGES_X 1
SetEnv PAGES_Y 9

# The Pager size can be over-ridden via a preference file, but the default
# (which looks okay on my 1920x1080 laptop) is 1/9th the screen width by 1
# screen height.  To over-ride this to, for example 203x900, put the following
# into a file in the .fvwm/preferences directory:
# SetEnv RIGHT_BAR_GEOMETRY 203x900-0+0
PipeRead 'echo SetEnv RIGHT_BAR_GEOMETRY \$(($[vp.width]/9))x$[vp.height]-0+0'

# Default modifier key is 4 (Win Key) for key bindings
SetEnv MOD_KEY 4

# Default position of window titles is at the top of the window,
# so it can be modified by a menu.
SetEnv TITLE_POSITION TitleAtTop

SetEnv ICONBOX_GEOMETRY $[vp.width]x$[vp.height]

SetEnv ICONFILL_UD Bottom
SetEnv ICONFILL_LR Left

# Settings menu entry for volume control
SetEnv VOLUME_APP "x-terminal-emulator -e alsamixer"
Test (x pavucontrol) SetEnv VOLUME_APP pavucontrol
# Various file browsing entries need this
SetEnv FILEBROWSER_APP "x-terminal-emulator -e vim"
Test (x nautilus) SetEnv FILEBROWSER_APP "nautilus --no-desktop"
Test (x rox) SetEnv FILEBROWSER_APP "rox"
Test (x thunar) SetEnv FILEBROWSER_APP "thunar"
Test (x pcmanfm) SetEnv FILEBROWSER_APP "pcmanfm"

# These are used to avoid hard-coded paths in the config file.
SetEnv fvwm_wallpapers_dir "$[FVWM_USERDIR]/wallpapers"
SetEnv fvwm_screenshots_dir "$[FVWM_USERDIR]/screenshots"
SetEnv fvwm_icons_dir "$[FVWM_USERDIR]/icons"

SetEnv fvwm_preferences_dir "$[FVWM_USERDIR]/preferences"
SetEnv fvwm_color_scheme_preference "$[fvwm_preferences_dir]/color_scheme"
SetEnv fvwm_font_preferences "$[fvwm_preferences_dir]/font"
SetEnv fvwm_key_preferences "$[fvwm_preferences_dir]/modifier_key"
SetEnv fvwm_title_preferences "$[fvwm_preferences_dir]/title_position"

# These are so it's easier to change titlebar button positions
SetEnv fvwm_title_button_miniicon 1
SetEnv fvwm_title_button_clip 2
SetEnv fvwm_title_button_arrow_up 4

# Note: icons come from Keyamoon's IcoMoon free pack, grab it from here and
# move/rename the SVG folder to ~/.fvwm/icons:
# https://github.com/Keyamoon/IcoMoon-Free/archive/master.zip
#
# This puts the icons directory content in the image search path.
ImagePath $[fvwm_icons_dir]:+

# This is where I save/load the current wallpaper (SetEnv WALLPAPER path.png)
SetEnv fvwm_wallpaper_preference "$[fvwm_preferences_dir]/wallpaper"

# This block creates the directories needed for my config to function
# correctly.
Test (!x "$[fvwm_wallpapers_dir]") Exec exec mkdir -p "$[fvwm_wallpapers_dir]"
Test (!x "$[fvwm_screenshots_dir]") Exec exec mkdir -p "$[fvwm_screenshots_dir]"
Test (!x "$[fvwm_preferences_dir]") Exec exec mkdir -p "$[fvwm_preferences_dir]"
#Test (!x "$[fvwm_icons_dir]") Exec exec mkdir -p "$[fvwm_icons_dir]"

# Now, read all over-rides from the preferences directory
# This must happen early in the config so that colorsets and other
# configurations that use the variables are set early enough.
Test (f "$[fvwm_preferences_dir]") PipeRead 'for f in "$[fvwm_preferences_dir]"/*; do \
    cat $f ; \
    echo Echo loaded preferences from $f ; \
    done'


# Font settings are constructed from variables stored as pieces
SetEnv DEFAULT_FONT "xft:$[DEFAULT_FONT_FAMILY]:size=$[DEFAULT_FONT_SIZE]"
SetEnv MENU_FONT "xft:$[MENU_FONT_FAMILY]:size=$[MENU_FONT_SIZE]"
DefaultFont "$[DEFAULT_FONT]"

# This next block contains page size, edge scrolling, and geometry window
# settings.
# ┌─────┐
# │  0  │  I like a 1x9 vertical desktop of pages.  And while I
# │┄┄┄┄┄│  don't like the mouse making the page scroll when the
# │  1  │  edge of the screen is reached, I do like being able
# │┄┄┄┄┄│  to drag windows across pages and have the page switch
# │  2  │  while doing so.
# │┄┄┄┄┄│
# │  3  │  I also think the Geometry Window that displays X and
# │┄┄┄┄┄│  Y coordinates while dragging a window is really only
# │  4  │  useful in a handful of situations, so I hide that.
# │┄┄┄┄┄│
# │  ⋮  │  I also like to see the window contents while
# └─────┘  dragging a window.
#
DesktopSize $[PAGES_X]x$[PAGES_Y]
EdgeScroll 0 0
EdgeThickness 1
HideGeometryWindow Always
OpaqueMoveSize unlimited

# ┌─────┬─────────────────────────────────────────────────────────┬─────┬─────┐
# │ I-1 │                           Title                         │ I-4 │ I-2 │
# └─────┴─────────────────────────────────────────────────────────┴─────┴─────┘
# This block defines how windows and menus are decorated and colored.
#
# Window titles are a blueish color with white text and inactive windows have a
# gray title.  The blue really looks better with transparency turned on (ala
# xcompmgr.)  All titles have a flat look with no 3D bevels.  (Colorset colors
# are controlled via variables, so these are configurable and can be changed at
# run time through a menu.)
#
# Icon 1 is a mini icon for the window that pops up a dynamic options list and
# Icon 2 is a paper clip icon that toggles window stickiness.
# Icon 4 is an up arrow that does a custom maximize (see CustomMax function).
# Icons are only displayed for the currently active window.
#
# In case I should ever toggle a border back on, handles are disabled (and set
# to width zero just in case).
#
# Menus also be flat, the flat border is accomplished by setting the
# MenuColorset hi and sh colors to the same value so that the border's fake 3D
# look uses the same color.  Increasing the width then gives it a nice bold
# look, but the popupoffset has to be adjusted to prevent the double border
# between menus effect.  So, set the PopupOffset's first argument to the
# negative value of the border width for menus.

# Reads the ColorSet values from preference file and then
# schedules updating the ones that are actively in use.
DestroyFunc DoColorSets
AddToFunc DoColorSets
+ I Read "$[fvwm_color_scheme_preference]"
+ I Schedule 250 FinishColorUpdate

#
# Updates the ColorSets so that a restart isn't needed when
# they are modified.
DestroyFunc FinishColorUpdate
AddToFunc FinishColorUpdate
+ I ColorSet 0 bg $[BG_COLOR], fg $[FG_COLOR_INACTIVE]
+ I ColorSet 1 Tint $[BG_COLOR] 50, bg $[BG_COLOR], fg $[FG_COLOR], fgsh black
+ I ColorSet 2 Tint $[BG_COLOR] 50, bg $[BG_COLOR], fg $[FG_COLOR], fgsh black, hi black, sh black
+ I ColorSet 3 bg $[BG_COLOR_LIGHTER], fg $[FG_COLOR]
+ I TitleStyle (Colorset 0 -- flat)
+ I Style "*" Colorset 0
+ I Style "*" HilightIconTitleColorset 1
+ I MenuStyle "*" MenuColorset 2, BorderWidth 2, ItemFormat "%s %| %i %l %|% %> ", \
          PopupOffset -2 100, Hilight3DOff, ActiveFore black, ForeGround \
          $[FG_COLOR], HilightBack $[BG_COLOR_LIGHTER], Font "$[MENU_FONT]", \
          TrianglesSolid, PopdownDelay 500
+ I BorderStyle -- flat
+ I ButtonStyle All (Colorset 0 -- flat)
+ I AddButtonStyle $[fvwm_title_button_miniicon] Active MiniIcon (HiddenHandles NoInset Hilight3Doff -- flat)
# Put a paperclip icon (I-2) in the upper right of the active window
+ I AddButtonStyle $[fvwm_title_button_clip] Active (Pixmap 0206-attachment.svg:14x14 -- flat)
# Put an up arrow (I-4) in the upper right of the active window
+ I AddButtonStyle $[fvwm_title_button_arrow_up] Active (Pixmap 0315-arrow-up2.svg:14x14 -- flat)


Style "*" BorderWidth 0
Style "*" HilightBack $[BG_COLOR]
Style "*" HilightFore white
Style "*" IconBackgroundPadding 1
Style "*" IconBackgroundRelief 0
Style "*" IconBox $[ICONBOX_GEOMETRY], IconFill $[ICONFILL_UD] $[ICONFILL_LR]
Style "*" IconOverride
Style "*" IconTitleColorset 0
Style "*" IconTitleRelief 0
Style "*" MinOverlapPlacement
Style "*" NoHandles
Style "*" SloppyFocus
Style "*" SnapAttraction 3 SameType Screen
Style "*" $[TITLE_POSITION]
Style trayer NoTitle, WindowListSkip, NeverFocus

# Style "*" IconBackgroundColorset 0 -- specify a colorset to add a background
Mouse 1 $[fvwm_title_button_arrow_up] N CustomMax

#
#  Menu formats are a little tricky to describe, but the FVWM man page does a
#  great job, search it for ItemFormat.
#
#  ┌────┬──────────────────────────┐┌───┬──────────┐
#  │ S  │   Active Sub menu      ▷ ││ s │ item     │
#  │ i  │   Inactive sub menu    ▶ ││ i │ item     │
#  │ d  │ ⓘ item with icon         ││ d │ item     │
#  │ e  │   item without icon      ││ e │  ⋮       │
#  │    │           ⋮              ││   │  ⋮       │
#  │ g  │           ⋮              ││ g │  ⋮       │
#  │ r  │           ⋮              ││ r │  ⋮       │
#  │ a  │           ⋮              ││ ⋮ │  ⋮       │
#  │ p  │           ⋮              │└───┴──────────┘
#  │ h  │           ⋮              │
#  │ i  │           ⋮              │
#  │ c  │           ⋮              │
#  └────┴──────────────────────────┘
#
#

# Set up icons for stuff...
Style "Android SDK Manager" Icon 0097-download.svg:$[ICON_SIZE], MiniIcon 0097-download.svg:$[MINI_ICON_SIZE], EWMHMiniIconOverride, DecorateTransient
Style "Apvlv" MiniIcon 0475-file-pdf.svg:$[MINI_ICON_SIZE]
Style "blobwars" Icon 0343-radio-unchecked.svg:$[ICON_SIZE], MiniIcon 0343-radio-unchecked.svg:$[MINI_ICON_SIZE]
Style "* - Chat" MiniIcon 0111-bubble2.svg:$[MINI_ICON_SIZE], EWMHMiniIconOverride
Style "Chromium-browser" Icon 0486-chrome.svg:$[ICON_SIZE], MiniIcon 0486-chrome.svg:$[MINI_ICON_SIZE], EWMHMiniIconOverride
Style "FightTheDragon" NoTitle
Style "Firefox" MiniIcon 0487-0487-firefox.svg:$[MINI_ICON_SIZE], EWMHMiniIconOverride
Style "Freeciv" Icon 0004-office.svg:$[ICON_SIZE], MiniIcon 0004-office.svg:$[MINI_ICON_SIZE]
Style "Friends" MiniIcon 0113-bubbles4.svg:$[MINI_ICON_SIZE], EWMHMiniIconOverride
Style "FvwmIdent" Icon 0266-question.svg:$[ICON_SIZE], MiniIcon 0266-question.svg:$[MINI_ICON_SIZE]
Style "Gimp" MiniIcon 0014-image.svg:$[MINI_ICON_SIZE], EWMHMiniIconOverride
Style "Inkscape" Icon 0344-crop.svg:$[ICON_SIZE], MiniIcon 0344-crop.svg:$[MINI_ICON_SIZE], EWMHMiniIconOverride
Style "Layers - Brushes" MiniIcon 0015-images.svg:$[MINI_ICON_SIZE], EWMHMiniIconOverride
Style "Minetest*" NoTitle
Style "MPlayer" Icon 0278-play2.svg:$[ICON_SIZE], MiniIcon 0278-play2.svg:$[MINI_ICON_SIZE]
Style "*nautilus*" MiniIcon 0048-folder.svg:$[MINI_ICON_SIZE], EWMHMiniIconOverride
Style "oclock" NoTitle, StaysOnBottom, Sticky, WindowListSkip, NeverFocus, CirculateSkip
Style "POWDER" Icon 0152-magic-wand.svg:$[ICON_SIZE], MiniIcon 0152-magic-wand.svg:$[MINI_ICON_SIZE]
Style "*rox*" MiniIcon 0048-folder.svg:$[MINI_ICON_SIZE], EWMHMiniIconOverride
Style "*rxvt*" MiniIcon 0386-terminal.svg:$[MINI_ICON_SIZE]
Style "Steam" NoIcon, Icon 0430-steam.svg:$[ICON_SIZE], MiniIcon 0430-steam.svg:$[MINI_ICON_SIZE], EWMHMiniIconOverride
Style "Toolbox*" MiniIcon 0151-hammer.svg:$[MINI_ICON_SIZE], EWMHMiniIconOverride
Style "URxvt" Icon 0386-terminal.svg:$[ICON_SIZE], Icon 0386-terminal.svg:$[ICON_SIZE], MiniIcon 0386-terminal.svg:$[MINI_ICON_SIZE]
Style "Vim" Icon 0385-embed2.svg:$[ICON_SIZE], MiniIcon 0385-embed2.svg:$[MINI_ICON_SIZE]
Style "Vim *" MiniIcon 0385-embed2.svg:$[MINI_ICON_SIZE]
Style "xcalc" MiniIcon 0065-calculator.svg:$[MINI_ICON_SIZE]
Style "XClipboard" Icon 0185-clipboard.svg:$[ICON_SIZE], MiniIcon 0185-clipboard.svg:$[MINI_ICON_SIZE]

# Bind left clicking I-1 to the options menu, but double-click should close the
# window.  More specifically, double click will close, single clicking will
# display a menu, holding the mouse down will display a menu, and moving the
# mouse while clicking it will move the window.
Mouse 1 $[fvwm_title_button_miniicon] N Ops-or-Close
DestroyFunc Ops-or-Close
AddToFunc Ops-or-Close
+ D Close
+ C Menu DynamicWindowOpsMenu
+ H Menu DynamicWindowOpsMenu
+ M Move

# The root menu consists of the following:
# ┌─────────────────┐
# │ Apps          ▷ │
# │ Games         ▷ │
# │ Screenshots   ▷ │
# │ Settings      ▷ │
# ├─────────────────┤
# │ Reload          │
# │ Lock            │
# │ Exit            │
# └─────────────────┘
DestroyMenu MenuFvwmRoot
AddToMenu MenuFvwmRoot
+ "%0276-enter.svg:$[MINI_ICON_SIZE]%Apps" Popup DynamicAppMenu
+ "%0224-happy.svg:$[MINI_ICON_SIZE]%Games" Popup DynamicGameMenu
+ "%0030-feed.svg:$[MINI_ICON_SIZE]%Feeds" Popup FeedMenu
+ MissingSubmenuFunction ScreenshotBrowser
+ "%0087-display.svg:$[MINI_ICON_SIZE]%Screenshots" Popup "$[fvwm_screenshots_dir]"
+ "%0147-equalizer.svg:$[MINI_ICON_SIZE]%Settings" Popup SettingsMenu
+ "" Nop
+ "%0303-loop2.svg:$[MINI_ICON_SIZE]%Reload" Restart
# Put a lock icon in the menu if xscreensaver is present
Test (x xscreensaver) AddToMenu MenuFvwmRoot "%0144-lock.svg:$[MINI_ICON_SIZE]%Lock" Exec exec xscreensaver-command -lock
# Put the exit option at the end of the menu
AddToMenu MenuFvwmRoot
+ "%0277-exit.svg:$[MINI_ICON_SIZE]%Exit" FvwmForm FvwmForm-QuitVerify
Style FvwmForm-QuitVerify !Title

DestroyMenu FeedMenu
AddtoMenu FeedMenu
+ MissingSubmenuFunction FetchFeeds
+ "Slashdot" Popup "http://rss.slashdot.org/Slashdot/slashdotMain"
+ "%0005-newspaper.svg:$[MINI_ICON_SIZE]%SoylentNews" Popup "https://soylentnews.org/index.rss"
+ "%0456-reddit.svg:$[MINI_ICON_SIZE]%Reddit" Title
+ "/r/pics" Popup "https://www.reddit.com/r/pics/.rss"
+ "/r/funny" Popup "https://www.reddit.com/r/funny/.rss"
+ "/r/Chinese" Popup "https://www.reddit.com/r/Chinese/.rss"
+ "/r/ChineseLanguage" Popup "https://www.reddit.com/r/ChineseLanguage/.rss"
+ "%0216-star-empty.svg:$[MINI_ICON_SIZE]%NASA" Title
+ "Breaking News" Popup "https://www.nasa.gov/rss/dyn/breaking_news.rss"
+ "Education News" Popup "https://www.nasa.gov/rss/dyn/educationnews.rss"
+ "Image of the Day" Popup "https://www.nasa.gov/rss/dyn/lg_image_of_the_day.rss"


DestroyFunc FetchFeeds
AddToFunc FetchFeeds
+ I DestroyMenu recreate $0
+ I AddToMenu "$0" "Fetching feed..." Title
+ I AddToMenu "$0" "Retry" FetchFeeds "$0"
+ I Exec exec python "$[FVWM_USERDIR]"/rss.py -m "$0" "$0"

#
# The settings menu consists of the following:
# ┌─────────────────────────┐
# │      FVWM Settings      │
# ├─────────────────────────┤
# │ Console                 │
# │ Colors                ▷ │
# │ Fonts                 ▷ │
# │ Modifier Key          ▷ │
# │ Wallpaper             ▷ │
# │ Window Title Position ▷ │
# ├─────────────────────────┤
# │         System          │
# │ Wifi                  ▷ │
# │ Displays              ▷ │
# │ Volume Control          │
# │ Bluetooth Wizard        │
# │ Bluetooth Manager       │
# └─────────────────────────┘

DestroyMenu SettingsMenu
AddToMenu SettingsMenu
+ "FVWM Settings" Title
+ MissingSubmenuFunction WallpaperBrowser
+ "%0386-terminal.svg:$[MINI_ICON_SIZE]%Console" FvwmConsole
+ "%0013-paint-format.svg:$[MINI_ICON_SIZE]%Colors" Popup ColorMenu
+ "%0349-font.svg:$[MINI_ICON_SIZE]%Fonts" Popup FontsMenu
+ "%0086-keyboard.svg:$[MINI_ICON_SIZE]%Modifier Key" Popup KeysMenu
+ "%0015-images.svg:$[MINI_ICON_SIZE]%Wallpaper" Popup "$[fvwm_wallpapers_dir]"
+ "%0268-minus.svg:$[MINI_ICON_SIZE]%Window Title Position" Popup TitlesMenu
+ "%0190-menu.svg:$[MINI_ICON_SIZE]%Toggle Pager" TogglePager
+ "System" Title
Test (x wifi.sh) AddToMenu SettingsMenu "%0028-connection.svg:$[MINI_ICON_SIZE]%Wifi" Popup WifiMenu
AddToMenu SettingsMenu "%0087-display.svg:$[MINI_ICON_SIZE]%Displays" Popup DisplaysMenu
AddToMenu SettingsMenu "%0295-volume-high.svg:$[MINI_ICON_SIZE]%Volume Control" LaunchWarp "$[VOLUME_APP]"

DestroyMenu WifiMenu
AddToMenu WifiMenu
+ DynamicPopupAction CreateWifiMenu

DestroyFunc CreateWifiMenu
AddToFunc CreateWifiMenu
+ I DestroyMenu recreate WifiMenu
+ I PipeRead 'SSID=$(wifi.sh -e) ; test ! -z "$SSID" && echo "AddToMenu WifiMenu \\"Connected: $SSID\\" Title" || echo "AddToMenu WifiMenu \\"Not Connected\\" Title"'
+ I AddToMenu WifiMenu "Connect to any" LaunchWarp x-terminal-emulator +sb -e wifi.sh -a
+ I AddToMenu WifiMenu "Disconnect" LaunchWarp x-terminal-emulator +sb -e wifi.sh -k
+ I Test (f "$[FVWM_USERDIR]"/regenconf.sh) AddToMenu WifiMenu "Refresh Conky Config" UpdateConky

DestroyFunc MakeTitleMenu
AddToFunc MakeTitleMenu
+ I DestroyMenu recreate TitlesMenu
+ I PipeRead ' \
if [ "$TITLE_POSITION" = "TitleAtTop" ] ; then \
    echo "AddToMenu TitlesMenu \\"[x] Top\\" SetTitlePosition TitleAtTop" ; \
else \
    echo "AddToMenu TitlesMenu \\"Top\\" SetTitlePosition TitleAtTop" ; \
fi ; \
if [ "$TITLE_POSITION" = "TitleAtLeft" ] ; then \
    echo "AddToMenu TitlesMenu \\"[x] Left\\" SetTitlePosition TitleAtLeft" ; \
else \
    echo "AddToMenu TitlesMenu \\"Left\\" SetTitlePosition TitleAtLeft" ; \
fi ; \
if [ "$TITLE_POSITION" = "TitleAtRight" ] ; then \
    echo "AddToMenu TitlesMenu \\"[x] Right\\" SetTitlePosition TitleAtRight" ; \
else \
    echo "AddToMenu TitlesMenu \\"Right\\" SetTitlePosition TitleAtRight" ; \
fi ; \
if [ "$TITLE_POSITION" = "TitleAtBottom" ] ; then \
    echo "AddToMenu TitlesMenu \\"[x] Bottom\\" SetTitlePosition TitleAtBottom" ; \
else \
    echo "AddToMenu TitlesMenu \\"Bottom\\" SetTitlePosition TitleAtBottom" ; \
fi'

DestroyMenu TitlesMenu
AddToMenu TitlesMenu
+ DynamicPopupAction MakeTitleMenu

DestroyFunc SetTitlePosition
AddToFunc SetTitlePosition
+ I Exec exec echo SetEnv TITLE_POSITION \"$0\" > "$[fvwm_title_preferences]"
+ I SetEnv TITLE_POSITION "$0"
+ I ReTitle

DestroyFunc ReTitle
AddToFunc ReTitle
+ I Style "*" $[TITLE_POSITION]

DestroyMenu KeysMenu
AddToMenu KeysMenu
+ "Windows Key" SetModifierKey 4
+ "Alt Key" SetModifierKey M
+ "Control Key" SetModifierKey C
+ "Contrl+Alt" SetModifierKey CM

DestroyFunc SetModifierKey
AddToFunc SetModifierKey
+ I Exec exec echo SetEnv MOD_KEY \"$0\" > "$[fvwm_key_preferences]"
+ I Schedule 250 Restart

#
# These colors are from various wallpapers, they're hideous, but they sort of
# work.
DestroyMenu ColorMenu
AddToMenu ColorMenu
+ "Blue" UpdateColors 4A516A
+ "Cake" UpdateColors 6f4d10
+ "Clouds" UpdateColors 236a64
+ "Swirl" UpdateColors 232323
+ "Zombies" UpdateColors 38512e
+ "Purple" UpdateColors 4b1338

#
# This function calls the color_helper script with a background color and then
# restarts
DestroyFunc UpdateColors
AddToFunc UpdateColors
+ I Exec exec python "$[FVWM_USERDIR]"/color_helper.py $0 > "$[fvwm_color_scheme_preference]"
+ I Schedule 250 DoColorSets

# Dynamic App Menu Generation
# If they exist, put rxvt, xterm, rox, nautilus ... in Apps menu:
Test (x rxvt) AddToMenu DynamicAppMenu "%0386-terminal.svg:$[MINI_ICON_SIZE]%RXvt" LaunchWarp rxvt
Test (x xterm) AddToMenu DynamicAppMenu "%0386-terminal.svg:$[MINI_ICON_SIZE]%XTerm" LaunchWarp xterm
AddToMenu DynamicAppMenu "%0049-folder-open.svg:$[MINI_ICON_SIZE]%File Browser" LaunchWarp $[FILEBROWSER_APP]
Test (x password-gorilla) AddToMenu DynamicAppMenu "%0142-key.svg:$[MINI_ICON_SIZE]%Password Gorilla" LaunchWarp password-gorilla
Test (x oclock) AddToMenu DynamicAppMenu "%0079-clock.svg:$[MINI_ICON_SIZE]%oclock" Exec exec oclock -geometry +0+0 -bg black -fg "$[BG_COLOR_LIGHTER]" -bd "$[BG_COLOR]" -transparent

# Internet-related stuff
# If they exist, put firefox, chromium, and steam into the Apps menu:
Test (x firefox) AddToMenu DynamicAppMenu "%0487-firefox.svg:$[MINI_ICON_SIZE]%Firefox" LaunchWarp firefox
Test (x finch, x x-terminal-emulator) AddToMenu DynamicAppMenu "%0111-bubble2.svg:$[MINI_ICON_SIZE]%Finch" LaunchWarp x-terminal-emulator -tn rxvt -e finch
Test (x chromium-browser) AddToMenu DynamicAppMenu "%0486-chrome.svg:$[MINI_ICON_SIZE]%Chromium" LaunchWarp chromium-browser
Test (x mumble) AddToMenu DynamicAppMenu "%0027-bullhorn.svg:$[MINI_ICON_SIZE]%Mumble" LaunchWarp mumble
Test (x steam) AddToMenu DynamicAppMenu "%0430-steam.svg:$[MINI_ICON_SIZE]%Steam" LaunchWarp steam
Test (x steam) AddToMenu DynamicAppMenu "%0113-bubbles4.svg:$[MINI_ICON_SIZE]%Steam Friends" LaunchWarp steam "steam://open/friends"
Test (x steam) AddToMenu DynamicAppMenu "%0430-steam.svg:$[MINI_ICON_SIZE]%Steam Library" LaunchWarp steam "steam://open/games"

# Games
# If they exist, put various games in the Games menu:
Test (x abe) AddToMenu DynamicGameMenu "%0151-hammer.svg:$[MINI_ICON_SIZE]%Abe's Amazing Adventure" LaunchWarp abe
Test (x blobwars) AddToMenu DynamicGameMenu "%0343-radio-unchecked.svg:$[MINI_ICON_SIZE]%Blobwars: Metal Blob Solid" LaunchWarp blobwars
Test (x freeciv) AddToMenu DynamicGameMenu "%0004-office.svg:$[MINI_ICON_SIZE]%FreeCiv" LaunchWarp freeciv
Test (x freecol) AddToMenu DynamicGameMenu "%0202-sphere.svg:$[MINI_ICON_SIZE]%FreeCol" LaunchWarp freecol
Test (x freedink) AddToMenu DynamicGameMenu "%0171-lab.svg:$[MINI_ICON_SIZE]%Dink Smallwood" LaunchWarp freedink
Test (x freedroidRPG) AddToMenu DynamicGameMenu "%0266-question.svg:$[MINI_ICON_SIZE]%FreeDroid RPG" LaunchWarp freedroidRPG
Test (x nethack,x x-terminal-emulator) AddToMenu DynamicGameMenu "Nethack (console)" LaunchWarp x-terminal-emulator +sb -e nethack
Test (x nexuiz) AddToMenu DynamicGameMenu "nexuiz" LaunchWarp nexuiz
Test (x powder) AddToMenu DynamicGameMenu "%0152-magic-wand.svg:$[MINI_ICON_SIZE]%Powder" LaunchWarp powder
Test (x sauerbraten) AddToMenu DynamicGameMenu "sauerbraten" LaunchWarp sauerbraten
Test (x slashem,x x-terminal-emulator) AddToMenu DynamicGameMenu "%0154-bug.svg:!$[MINI_ICON_SIZE]%Slashem (console)" LaunchWarp x-terminal-emulator +sb -e slashem
Test (x tmw) AddToMenu DynamicGameMenu "%0266-question.svg:!$[MINI_ICON_SIZE]%The Mana World" LaunchWarp tmw

#I have some shortcuts in ~/bin ending in .exe that invoke wine,
#if they exist, put these in the Games menu, too.
Test (x poe.exe) AddToMenu DynamicGameMenu "%0151-hammer.svg:$[MINI_ICON_SIZE]%Path of Exile" LaunchWarp poe.exe
Test (x marvel.exe) AddToMenu DynamicGameMenu "Marvel heroes" LaunchWarp marvel.exe
Test (x warframe.exe) AddToMenu DynamicGameMenu "Warframe" LaunchWarp warframe.exe

# Editors/Utilities
# If they exist, put various editors into the Apps menu:
Test (x vim,x x-terminal-emulator) AddToMenu DynamicAppMenu "%0385-embed2.svg:$[MINI_ICON_SIZE]%Vim" LaunchWarp x-terminal-emulator +sb -T Vim -e vim
Test (x gvim) AddToMenu DynamicAppMenu "%0385-embed2.svg:$[MINI_ICON_SIZE]%GVim" LaunchWarp gvim
Test (x gedit) AddToMenu DynamicAppMenu "%0039-file-text2.svg:$[MINI_ICON_SIZE]%GEdit" LaunchWarp gedit
Test (x xclipboard) AddToMenu DynamicAppMenu "%0185-clipboard.svg:$[MINI_ICON_SIZE]%Clipboard" LaunchWarp xclipboard
Test (x gimp) AddToMenu DynamicAppMenu "%0014-image.svg:$[MINI_ICON_SIZE]%Gimp" LaunchWarp gimp
Test (x inkscape) AddToMenu DynamicAppMenu "%0344-crop.svg:$[MINI_ICON_SIZE]%Inkscape" LaunchWarp inkscape

# Settings
# If it exists, put the bluetooth-wizard into the Settings menu
Test (x bluetooth-wizard) AddToMenu SettingsMenu "Bluetooth Wizard" LaunchWarp bluetooth-wizard
Test (x blueman-manager) AddToMenu SettingsMenu "Bluetooth Manager" LaunchWarp blueman-manager

# Pop up the current window options on Win+o
Key o FSTW $[MOD_KEY] Current Popup DynamicWindowOpsMenu Window 0 0

# Pull all Fvwm stuff to the foreground on Win+Space
Key Space A $[MOD_KEY] All (Fvwm*) Raise
# Push all Fvwm stuff to the background on Win+Shift+Space
Key Space A $[MOD_KEY]S All (Fvwm*) Lower

# Resize on win+r
Key r A $[MOD_KEY] Resize Direction SE

# Touchpad enable/disable
Test (x touchpad.sh) Key F5 A $[MOD_KEY] Exec exec touchpad.sh

# Place again on win+p
Key p A $[MOD_KEY] PlaceAgain

# When Win+Arrow is pressed, move to the corresponding edge of the screen
Key Right A $[MOD_KEY] AnimatedMove -0 keep Warp
Key Left A $[MOD_KEY] AnimatedMove 0 keep Warp
Key Up A $[MOD_KEY] AnimatedMove keep 0 Warp
Key Down A $[MOD_KEY] AnimatedMove keep -0 Warp

# When Win+T is pressed, open a terminal
Key t A $[MOD_KEY] LaunchWarp x-terminal-emulator +sb

# When Win+S is pressed, shade the window
Key s A $[MOD_KEY] WindowShade

# Bind Win+Right Mouse to resize function
Mouse 3 FSTW $[MOD_KEY] Resize-or-not

# Bind Win+Left Mouse to Moving, raising, and lowering actions
Mouse 1 FSTW 4 Move-Raise-or-Lower

# Bind Mouse 1 on Icons to DynamicWindowOpsMenu
Mouse 1 I A Menu DynamicWindowOpsMenu

# Move on Win+M
Key M A $[MOD_KEY] Move

# Move up or down by a page when win+k or win+j are held
Key k A $[MOD_KEY] GoToPage +0p -1p
Key j A $[MOD_KEY] GoToPage +0p +1p

# Move between windows on the current page with Win+h/l
Key h A $[MOD_KEY] Focus-Prev-Window
Key l A $[MOD_KEY] Focus-Next-Window

# Win+Esc pop up the menu
Key Escape A $[MOD_KEY] Menu MenuFvwmRoot

Key Print A A Screenshot root -screen
Key F4 A A Screenshot root -screen

Key Tab A 4 Menu NewAltTabMenu

#Use mpc for music controls
Test (x mpc) Key XF86AudioPlay A A Exec exec mpc pause
Test (x mpc) Key XF86AudioNext A A Exec exec mpc next
Test (x mpc) Key XF86AudioPrev A A Exec exec mpc prev

# Click and release: start resizing the window on right and bottom edges, left
# click to accept, right to cancel
# OR
# Click and drag to resize in whatever direction the mouse goes
DestroyFunc Resize-or-not
AddToFunc   Resize-or-not
+ H Nop
+ M Resize
+ C Resize Direction SE

# Click and release to raise,
# Click and Hold to move, (or immediately move after clicking...)
# Double Click to Lower
DestroyFunc Move-Raise-or-Lower
AddToFunc Move-Raise-or-Lower
+ H Move
+ M Move
+ C Raise
+ D Lower

DestroyFunc Focus-Prev-Window
AddToFunc Focus-Prev-Window
+ I Prev (!WindowListSkip, AcceptsFocus, !Iconic, CurrentPage) Warp-Focus

DestroyFunc Focus-Next-Window
AddToFunc Focus-Next-Window
+ I Next (!WindowListSkip, AcceptsFocus, !Iconic, CurrentPage) Warp-Focus

DestroyFunc Warp-Focus
AddToFunc Warp-Focus
+ I WarpToWindow 5p 5p

# cycle through other windows of the same class
# similar to gnome/osx but without displaying an icon or list of other windows
# of the same class
Key grave A $[MOD_KEY] Focus-Next-Class
DestroyFunc Focus-Next-Class
AddToFunc Focus-Next-Class
+ I Next (!WindowListSkip, AcceptsFocus, CurrentPage, $[w.class]) Warp-Focus


#
# Provides a means of letting the user pick a new wallpaper from a folder.
#
# It only likes png files.
#
# Creates the browser for wallpaper and puts it into a menu 
DestroyFunc WallpaperBrowser
AddToFunc WallpaperBrowser
+ I PipeRead 'test ! -d "$0/.thumbs" && mkdir "$0/.thumbs"; \
   for i in "$0/"*; do \
      iname=${i##*/} ; \
      test -f "$0/.thumbs/${iname}" \
         -a "${i}" -ot "$0/.thumbs/${iname}" || { \
            convert -quality 0 -scale $[WALLPAPER_SCALE] "${i}" "png:$0/.thumbs/${iname}" 2>/dev/null \
               || continue; \
         }; \
   done; \
   for i in "$0/.thumbs/"*; do \
      test -f "$0/${i##*/}" || rm "${i}" ; \
   done'
+ I DestroyMenu "$0"
+ I AddToMenu "$0" Refresh DestroyMenu "$0"
+ I PipeRead 'for file in "$0/".thumbs/*; do \
      iname=${file##*/} ; \
      echo AddToMenu \\"$0\\" \\"\*$0/.thumbs/$iname*$iname\\" ChangeWallpaper \\"$0/$iname\\" ;\
      done'
# Add an option to browse the wallpaper directory with whatever filebrowser is installed
+ I AddToMenu "$0" "\*0049-folder-open.svg:$[MINI_ICON_SIZE]*Browse Directory" LaunchWarp "$[FILEBROWSER_APP]" "$0"

DestroyFunc ScreenshotBrowser
AddToFunc ScreenshotBrowser
+ I PipeRead 'test ! -d "$0/.thumbs" && mkdir "$0/.thumbs"; \
   for i in "$0/"*; do \
      test -f "$0/.thumbs/${i##*/}" \
         -a "${i}" -ot "$0/.thumbs/${i##*/}" || { \
            convert -quality 0 -scale $[SCREEN_SHOT_SCALE] "${i}" "png:$0/.thumbs/${i##*/}" 2>/dev/null \
               || continue; \
         }; \
   done; \
   for i in "$0/.thumbs/"*; do \
      test -f "$0/${i##*/}" || rm "${i}" 2>/dev/null; \
   done'
+ I DestroyMenu "$0"
+ I AddToMenu "$0" Refresh DestroyMenu "$0"
+ I PipeRead 'for file in "$0/".thumbs/*; do \
      iname=${file##*/} ; \
      echo AddToMenu \\"$0\\" \\"\*$0/.thumbs/$iname*$iname\\" Exec exec display \\"$0/$iname\\" ;\
      done'
# Add an option to browse the screenshots directory with whatever filebrowser is installed
+ I AddToMenu "$0" "\*0049-folder-open.svg:$[MINI_ICON_SIZE]*Browse Directory" LaunchWarp "$[FILEBROWSER_APP]" "$0"

# The user can select different images to use as the wallpaper at any time.
# Such selections are saved to and loaded from the wallpaper file in the
# preferences folder.

# This function changes the wallpaper preference to the image file it is passed
DestroyFunc ChangeWallpaper
AddToFunc ChangeWallpaper
+ I Exec exec echo SetEnv WALLPAPER "$0" > "$[fvwm_wallpaper_preference]"
+ I SetEnv WALLPAPER "$0"
+ I Schedule 250 LoadWallpaper

# This function loads the wallpaper from the preference file
DestroyFunc LoadWallpaper
AddToFunc LoadWallpaper
+ I Test (f "$[fvwm_wallpaper_preference]") Exec exec fvwm-root -r --dither "$[WALLPAPER]"

# Make sure wallpaper loading happens on startup:
AddToFunc StartFunction
+ I DoColorSets
+ I LoadWallpaper
+ I Module FvwmCommandS
+ I Module FvwmEvent
+ I Test (init) Exec exec ibus-daemon -drx
+ I Test (init, x blueman-applet) Exec exec blueman-applet
+ I Test (init, x bluetooth-applet) Exec exec bluetooth-applet
+ I Test (init, x synclient) Exec exec synclient HorizTwoFingerScroll=1
+ I Test (init, x synclient) Exec exec synclient TapButton3=2
+ I Test (init, x xcompmgr, x transset) Exec exec xcompmgr
+ I Test (init, x xscreensaver) Exec exec xscreensaver -no-splash
+ I Test (Restart, x xcompmgr, x transset) Retransit
+ I PipeRead 'python "$[FVWM_USERDIR]"/display.py -f'

*FvwmEvent: Cmd
*FvwmEvent: add_window WindowAdded
*FvwmEvent: PassId

DestroyFunc LaunchWarp
AddToFunc LaunchWarp
+ I PipeRead 'if [ -z $WarpCounter ] ; then \
        echo SetEnv WarpCounter 0 ; \
    else \
        echo SetEnv WarpCounter $((WarpCounter+1)) ; \
    fi'
+ I Exec exec $*

DestroyFunc WindowAdded
AddToFunc WindowAdded
+ I ThisWindow ( URxvt ) MakeTrans
+ I ThisWindow ( xterm ) MakeTrans
+ I Test (EnvIsSet WarpCounter) Warp-Focus
+ I Test (EnvIsSet WarpCounter) PipeRead '\
    if [ $WarpCounter -gt 0 ] ; then \
        echo SetEnv WarpCounter $((WarpCounter-1)) ; \
    else \
        echo UnsetEnv WarpCounter ; \
    fi'

DestroyFunc MakeTrans
AddToFunc MakeTrans
+ I Exec exec transset -i $[w.id] 0.9

# On the lower left portion of the screen (root window) I have a conky display
# with battery and network display.
#
# The network graph displays something
# like this:
#
#   eth1: up, addr 192.168.4.102
#   Up                      Down
#   ┌─────────────┬─────────────┐
#   │      ╱╲     │             │
#   │┄┄┄╱╲╱┄┄╲┄┄┄ │┄┄┄╱╲╱╲╱╲┄┄┄ │
#   └─────────────┴─────────────┘
#


AddToFunc StartFunction
+ I UpdateConky
+ I FvwmPager
+ I Test (x trayer, init) Exec exec trayer --widthtype request --heighttype request --align right 2>/dev/null
+ I Test (x conky, init) Exec exec conky -c "$[FVWM_USERDIR]"/conkyconf -a bottom_left 2>/dev/null

# This function calls an external script for regenerating the conky config that
# displays network info.
DestroyFunc UpdateConky
AddToFunc UpdateConky
+ I Test (f "$[FVWM_USERDIR]"/regenconf.sh) Exec exec bash "$[FVWM_USERDIR]"/regenconf.sh > "$[FVWM_USERDIR]"/conkyconf

Style FvwmPager NoTitle, WindowListSkip, NeverFocus, Sticky
*FvwmPager: Geometry "$[RIGHT_BAR_GEOMETRY]"
*FvwmPager: Font none
*FvwmPager: SmallFont "xft:Droid Sans Mono:size=6"
*FvwmPager: WindowLabelFormat "%t"
*FvwmPager: Balloons
*FvwmPager: BalloonFont "xft:Droid Sans Mono:size=12"
*FvwmPager: MiniIcons
*FvwmPager: WindowColorsets 0 3
*FvwmPager: HilightColorset * 3
*FvwmPager: Colorset * 1
*FvwmPager: UseSkipList
#*FvwmPager: Hilight gray

DestroyFunc TogglePager
AddToFunc TogglePager
+ I All (FvwmPager) Close
+ I TestRc (NoMatch) FvwmPager

Test (x $[FVWM_USERDIR]/font_helper.sh) PipeRead '$[FVWM_USERDIR]/font_helper.sh'

# Window options menu
DestroyMenu DynamicWindowOpsMenu
AddToMenu DynamicWindowOpsMenu DynamicPopupAction DynamicWindowOpsMenuFunction

# This is the function for creating context-sensitive menus
DestroyFunc DynamicWindowOpsMenuFunction
AddToFunc DynamicWindowOpsMenuFunction
+ I DestroyMenu recreate DynamicWindowOpsMenu
+ I AddToMenu DynamicWindowOpsMenu "Window Options: $[w.name]" Title
+ I AddToMenu DynamicWindowOpsMenu "Toggle Title" ToggleTitle
+ I Test (x xcompmgr, x transset) AddToMenu DynamicWindowOpsMenu "Solidify" Exec exec transset -i $[w.id] 1.0
+ I ThisWindow ("Firefox",!Iconic) AddToMenu DynamicWindowOpsMenu "New Tab" Exec exec firefox -remote "openurl(about:blank,new-tab)"
+ I ThisWindow ("Firefox") AddToMenu DynamicWindowOpsMenu "New Window" Exec exec firefox -remote "openurl(about:blank,new-window)"
+ I TestRc (Match) AddToMenu DynamicWindowOpsMenu "" Nop
+ I AddToMenu DynamicWindowOpsMenu "%0266-question.svg:$[MINI_ICON_SIZE]%Identify" FvwmIdent
+ I ThisWindow (!Iconic) AddToMenu DynamicWindowOpsMenu "%0016-camera.svg:$[MINI_ICON_SIZE]%Get Screenshot" Screenshot $[w.id]
+ I ThisWindow (!Iconic) AddToMenu DynamicWindowOpsMenu "%0015-images.svg:$[MINI_ICON_SIZE]%Get Screenshot (with borders)" Screenshot $[w.id] -frame
+ I AddToMenu DynamicWindowOpsMenu "" Nop
+ I ThisWindow (Iconic) AddToMenu DynamicWindowOpsMenu "%$[w.miniiconfile]:$[MINI_ICON_SIZE]%Deiconify" Iconify off
+ I ThisWindow (!Iconic) AddToMenu DynamicWindowOpsMenu "%$[w.miniiconfile]:$[MINI_ICON_SIZE]%Iconify" Iconify
+ I TestRc (Match) AddToMenu DynamicWindowOpsMenu "%0318-arrow-down-right2.svg:$[MINI_ICON_SIZE]%Resize" Resize
+ I AddToMenu DynamicWindowOpsMenu "%0317-arrow-right2.svg:$[MINI_ICON_SIZE]%Move" Move
+ I ThisWindow (Maximized) AddToMenu DynamicWindowOpsMenu "%0139-shrink.svg:$[MINI_ICON_SIZE]%Un-Maximize" Maximize
+ I TestRc (NoMatch) AddToMenu DynamicWindowOpsMenu "%0138-enlarge.svg:$[MINI_ICON_SIZE]%Maximize" Maximize
+ I ThisWindow (Shaded) AddToMenu DynamicWindowOpsMenu "Un-Shade" WindowShade
+ I TestRc (NoMatch) AddToMenu DynamicWindowOpsMenu "%0268-minus.svg:$[MINI_ICON_SIZE]%Shade" WindowShade
+ I ThisWindow (Sticky) AddToMenu DynamicWindowOpsMenu "%0071-pushpin.svg:$[MINI_ICON_SIZE]%Un-Stick" WindowStyle !Sticky
+ I TestRc (NoMatch) AddToMenu DynamicWindowOpsMenu "%0071-pushpin.svg:$[MINI_ICON_SIZE]%Stick" WindowStyle Sticky
+ I AddToMenu DynamicWindowOpsMenu "" Nop
+ I AddToMenu DynamicWindowOpsMenu "%0183-switch.svg:$[MINI_ICON_SIZE]%Close" Close
+ I AddToMenu DynamicWindowOpsMenu "%0151-hammer.svg:$[MINI_ICON_SIZE]%Kill" Destroy
+ I AddToMenu DynamicWindowOpsMenu "" Nop
+ I AddToMenu DynamicWindowOpsMenu "%0048-folder.svg:$[MINI_ICON_SIZE]%Group Actions" Popup DynamicGroupMenuThingy

# Function to do screenshots and save them to the screenshot pref dir using
# date/time as the name.
DestroyFunc Screenshot
AddToFunc Screenshot
+ I Raise
+ I Exec exec import -window $0 $1 "$[fvwm_screenshots_dir]"/`date +%Y_%b_%d_%H:%M:%S.png`
+ I Schedule 250 ScreenshotBrowser "$[fvwm_screenshots_dir]"

# This is the context-sensitive group menu 
DestroyMenu DynamicGroupMenuThingy
AddToMenu DynamicGroupMenuThingy DynamicPopupAction DynamicGroupMenuThingyFunction

# This creates a context menu for windows based on group (window class)
DestroyFunc DynamicGroupMenuThingyFunction
AddToFunc DynamicGroupMenuThingyFunction
+ I DestroyMenu recreate DynamicGroupMenuThingy
+ I AddToMenu DynamicGroupMenuThingy "Group: $[w.class]" Title
+ I Current + "Close All" Current All ($[w.class]) Close
+ I Current + "Shade All" Current All ($[w.class], !Shaded) WindowShade True
+ I Current + "Un-Shade All" Current All ($[w.class], !Shaded) WindowShade False
+ I Current + "Iconfiy All" Current All ($[w.class], !Iconic) Iconify
+ I Current + "Deiconfiy All" Current All ($[w.class], Iconic) Iconify off
+ I Current + "List" Popup QuickWindowList

#This is used to build the List option of the group context-menu
DestroyMenu QuickWindowList
AddToMenu QuickWindowList DynamicPopupAction DynamicQuickWindowListFunction QuickWindowList

# This creates a window list similar to the NewAltTabFunction, but is used within the group context menu
DestroyFunc DynamicQuickWindowListFunction
AddToFunc DynamicQuickWindowListFunction
+ I DestroyMenu recreate QuickWindowList
+ I AddToMenu QuickWindowList "Desk: $[desk.n]" Title
+ I ThisWindow (Iconic) Current All ($[w.class], CirculateHit, Iconic, AcceptsFocus) EvalQuickWindowList QuickWindowList
+ I ThisWindow (!Iconic) Current All ($[w.class], CirculateHit, !Iconic, AcceptsFocus) EvalQuickWindowList QuickWindowList

# This creates an alt-tab like menu, but it lists the non-iconified windows and then iconified windows -
# the iconified windows have their thumbnails displayed, non-iconified display mini-icons
DestroyMenu NewAltTabMenu
AddToMenu NewAltTabMenu DynamicPopupAction NewAltTabFunction

DestroyFunc NewAltTabFunction
AddToFunc NewAltTabFunction
+ I DestroyMenu NewAltTabMenu
+ I AddToMenu NewAltTabMenu DynamicPopupAction NewAltTabFunction
+ I Current All ( !"Fvwm*", !Iconic, AcceptsFocus ) EvalQuickWindowList NewAltTabMenu
+ I Current All ( !"Fvwm*", Iconic, AcceptsFocus ) EvalQuickWindowListIcons NewAltTabMenu

# Used to create a menu of non-iconified windows
DestroyFunc EvalQuickWindowList
AddToFunc EvalQuickWindowList
+ I Current AddToMenu "$0" %$[w.miniiconfile]:30x30%"$[w.class]: $[w.name]" WindowId $[w.id] Warp-Focus

# Used to create a menu of the iconified windows
DestroyFunc EvalQuickWindowListIcons
AddToFunc EvalQuickWindowListIcons
+ I Current AddToMenu "$0" %$[w.miniiconfile]:30x30%"(i) $[w.class]: $[w.name]" WindowId $[w.id] Warp-Focus
#+ I Current AddToMenu $0 %$[temp_icon_dir]/icon.tmp.$[w.id].png%"$[w.class]: $[w.name]" WindowId $[w.id] WindowListSelectFunction
# Note the above function will not work because I'm not using the temp_icon_dir stuff in this config

# Used to un-iconify windows in the group context menu
DestroyFunc WindowListSelectFunction
AddToFunc WindowListSelectFunction
+ I Iconify off
+ I Warp-Focus


# CustomMax moves the window through various sizes.
#
#  Normal            HalfMax           FullMax
#  ┌┄┄┄┄┄┄┄┄┄┐       ┌─────┐┄┄┄┐       ┌─────────┐
#  ┊         ┊       │     │   ┊       │         │
#  ┌─────┐   ┊       │     │   ┊       │         │
#  │     │   ┊  ▶▶▶  │     │   ┊  ▶▶▶  │         │
#  │     │   ┊       │     │   ┊       │         │
#  └─────┘   ┊       │     │   ┊       │         │
#  ┊         ┊       │     │   ┊       │         │
#  └┄┄┄┄┄┄┄┄┄┘       └─────┘┄┄┄┘       └─────────┘
#  Normal is the default size.
#
#                    HalfMax is vertically maximized.
#
#                                      FullMax is vertically and horizontally
#                                      maximized.
# CustomMax uses a horribly complex set of functions to traverse a state
# machine to put the window into the various sizes.
#
# CustomMax and those other crazy functions use State 1 and State 2 to decide
# what state to go into.
# !1, !2 -> HalfMax,  1, !2
#  1, !2 -> FullMax, !1,  2
# !1,  2 -> Restore, !1, !2
#
# Or, as a sort of grey code truth table:
#  0 0  -> HalfMax and set (1 0)
#  1 0  -> FullMax and set (0 1)
#  0 1  -> Restore and set (0 0)
#
Key F A $[MOD_KEY] CustomMax
# Entry-point to custom maximization state machine
# Transition from initial state to half max (2)
# or figure out what other state it could be in via Resolve1or2
DestroyFunc CustomMax
AddToFunc CustomMax
+ I ThisWindow (!State 1, !State 2) HalfMax
+ I TestRc (NoMatch) Resolve1or2

# Called when the state machine is not in the initial state
# and the state can only be 1 or 2, so figure out if it's 
# currently state 1 and go to full max
# or (if it's state 2,) restore initial state
DestroyFunc Resolve1or2
AddToFunc Resolve1or2
+ I ThisWindow ( State 1 ) FullMax
+ I TestRc (NoMatch) Restore

# Called when the state machine is in state 1 transitioning to state 2
DestroyFunc FullMax
AddToFunc FullMax
+ I State 1 off
+ I State 2 on
+ I Maximize on

# Called when the state machine is going to state 1
DestroyFunc HalfMax
AddToFunc HalfMax
+ I State 1 on
+ I MakePartlyFull
+ I WindowStyle NoTitle

##
# This function uses state 3 to decide what to do with a window title.  If
# state 3 is set, then it assumes the title is off and turns it on.  If state 3
# is not set, then it assumes the title is on and turns it off.
DestroyFunc ToggleTitle
AddToFunc ToggleTitle
+ I ThisWindow (State 3) WindowStyle Title
+ I TestRc (NoMatch) WindowStyle !Title
+ I Current State 3 Toggle

PipeRead 'echo SetEnv HALF_WIDTH $(($[vp.width]/2))'

# Called when the state machine is going to state 2
DestroyFunc MakePartlyFull
AddToFunc MakePartlyFull
+ I State 2 on
+ I ResizeMoveMaximize $[HALF_WIDTH]p 100% keep 0

# Called when the state machine is going back to initial state
DestroyFunc Restore
AddToFunc Restore
+ I State 2 off
+ I Maximize off
+ I WindowStyle Title

# Disable Attention Grabbers
DestroyFunc UrgencyFunc
Style "*" !FPGrabFocus, GrabFocusOff

# Transparent Windows on Restart
DestroyFunc Retransit
AddToFunc Retransit
+ I All WindowAdded $[w.id]

# Make clicking the paper clip (I-2) call the toggle sticky function
Mouse 1 $[fvwm_title_button_clip] N ToggleSticky

# Makes the window sticky (or removes stickyness)
DestroyFunc ToggleSticky
AddToFunc ToggleSticky
+ I ThisWindow (Sticky) WindowStyle !Sticky
+ I TestRc (NoMatch) WindowStyle Sticky

# media keys
Key XF86AudioMute A A Exec exec amixer set Master toggle
#Key F6 A A Exec exec brightness.sh -d
#Key F7 A A Exec exec brightness.sh -u
Test (x amixer) Key F8 A A Exec exec amixer -D pulse sset Master toggle
Test (x amixer) Key F9 A A Exec exec amixer -D pulse sset Master 5%-
Test (x amixer) Key F10 A A Exec exec amixer -D pulse sset Master 5%+
Test (x amixer) Key XF86AudioRaiseVolume A A Exec exec amixer -D pulse sset Master 2%+
Test (x amixer) Key XF86AudioLowerVolume A A Exec exec amixer -D pulse sset Master 2%-

Key XF86PowerOff A A FvwmForm FvwmForm-QuitVerify

PipeRead "echo Echo Config load ended at $(date)"
